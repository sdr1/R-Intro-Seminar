# axis.text.x = element_blank(),
#panel.border = element_blank(),
panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = "none"
)
nycflights13::weather %>%
# start plotting commands
ggplot(aes(x = time_hour, y = temp)) +
# make it a line plot
geom_line() +
# minimal theme
theme_minimal() +
facet_wrap(~ origin, scales = "free") +
#scale_y_continuous(label = scales::comma) +
xlab("Time") + ylab("Temperature (F)") +
scale_x_date(date_breaks = "1 month", date_labels = "%M")
nycflights13::weather %>%
# start plotting commands
ggplot(aes(x = time_hour, y = temp)) +
# make it a line plot
geom_line() +
# minimal theme
theme_minimal() +
facet_wrap(~ origin, scales = "free") +
#scale_y_continuous(label = scales::comma) +
xlab("Time") + ylab("Temperature (F)") +
scale_x_date(date_breaks = "1 month", date_labels = "%m")
nycflights13::weather %>%
# start plotting commands
ggplot(aes(x = time_hour, y = temp)) +
# make it a line plot
geom_line() +
# minimal theme
theme_minimal() +
facet_wrap(~ origin, scales = "free") +
#scale_y_continuous(label = scales::comma) +
xlab("Time") + ylab("Temperature (F)") +
scale_x_date(date_breaks = "1 month", date_labels = "%M") +
ggtitle("Hour by Hour Temp at JFK: 2013") +
theme(
# Make title front and center
plot.title = element_text(size=14, face="bold",hjust = 0.5),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"),
strip.text.x = element_text(size=10),
axis.text = element_text(size=10),
# axis.text.x = element_blank(),
#panel.border = element_blank(),
panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = "none"
)
nycflights13::weather %>%
# start plotting commands
ggplot(aes(x = time_hour, y = temp)) +
# make it a line plot
geom_line() +
# minimal theme
theme_minimal() +
facet_wrap(~ origin, scales = "free") +
#scale_y_continuous(label = scales::comma) +
xlab("Time") + ylab("Temperature (F)") +
ggtitle("Hour by Hour Temp at JFK: 2013") +
theme(
# Make title front and center
plot.title = element_text(size=14, face="bold",hjust = 0.5),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"),
strip.text.x = element_text(size=10),
axis.text = element_text(size=10),
# axis.text.x = element_blank(),
#panel.border = element_blank(),
panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = "none"
)
nycflights13::weather %>%
# start plotting commands
ggplot(aes(x = time_hour, y = temp)) +
# make it a line plot
geom_line() +
# minimal theme
theme_minimal() +
scale_x_datetime(breaks = "%m") +
facet_wrap(~ origin, scales = "free") +
#scale_y_continuous(label = scales::comma) +
xlab("Time") + ylab("Temperature (F)") +
ggtitle("Hour by Hour Temp at JFK: 2013") +
theme(
# Make title front and center
plot.title = element_text(size=14, face="bold",hjust = 0.5),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"),
strip.text.x = element_text(size=10),
axis.text = element_text(size=10),
# axis.text.x = element_blank(),
#panel.border = element_blank(),
panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = "none"
)
nycflights13::weather %>%
# start plotting commands
ggplot(aes(x = time_hour, y = temp)) +
# make it a line plot
geom_line() +
# minimal theme
theme_minimal() +
scale_x_datetime(breaks = "%M") +
facet_wrap(~ origin, scales = "free") +
#scale_y_continuous(label = scales::comma) +
xlab("Time") + ylab("Temperature (F)") +
ggtitle("Hour by Hour Temp at JFK: 2013") +
theme(
# Make title front and center
plot.title = element_text(size=14, face="bold",hjust = 0.5),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"),
strip.text.x = element_text(size=10),
axis.text = element_text(size=10),
# axis.text.x = element_blank(),
#panel.border = element_blank(),
panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = "none"
)
nycflights13::weather %>%
# start plotting commands
ggplot(aes(x = time_hour, y = temp)) +
# make it a line plot
geom_line() +
# minimal theme
theme_minimal() +
scale_x_datetime(breaks = "%b") +
facet_wrap(~ origin, scales = "free") +
#scale_y_continuous(label = scales::comma) +
xlab("Time") + ylab("Temperature (F)") +
ggtitle("Hour by Hour Temp at JFK: 2013") +
theme(
# Make title front and center
plot.title = element_text(size=14, face="bold",hjust = 0.5),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"),
strip.text.x = element_text(size=10),
axis.text = element_text(size=10),
# axis.text.x = element_blank(),
#panel.border = element_blank(),
panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = "none"
)
nycflights13::weather %>%
# start plotting commands
ggplot(aes(x = time_hour, y = temp)) +
# make it a line plot
geom_line() +
# minimal theme
theme_minimal() +
scale_x_datetime(date_breaks = "2 months") +
facet_wrap(~ origin, scales = "free") +
#scale_y_continuous(label = scales::comma) +
xlab("Time") + ylab("Temperature (F)") +
ggtitle("Hour by Hour Temp at JFK: 2013") +
theme(
# Make title front and center
plot.title = element_text(size=14, face="bold",hjust = 0.5),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"),
strip.text.x = element_text(size=10),
axis.text = element_text(size=10),
# axis.text.x = element_blank(),
#panel.border = element_blank(),
panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = "none"
)
nycflights13::weather %>%
# start plotting commands
ggplot(aes(x = time_hour, y = temp)) +
# make it a line plot
geom_line() +
# minimal theme
theme_minimal() +
scale_x_datetime(date_breaks = "6 months", labels = "%b") +
facet_wrap(~ origin, scales = "free") +
#scale_y_continuous(label = scales::comma) +
xlab("Time") + ylab("Temperature (F)") +
ggtitle("Hour by Hour Temp at JFK: 2013") +
theme(
# Make title front and center
plot.title = element_text(size=14, face="bold",hjust = 0.5),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"),
strip.text.x = element_text(size=10),
axis.text = element_text(size=10),
# axis.text.x = element_blank(),
#panel.border = element_blank(),
panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = "none"
)
nycflights13::weather
nycflights13::weather %>%
# start plotting commands
ggplot(aes(x = time_hour, y = temp)) +
# make it a line plot
geom_line() +
# minimal theme
theme_minimal() +
scale_x_datetime(date_breaks = "6 months", labels = "%m") +
facet_wrap(~ origin, scales = "free") +
#scale_y_continuous(label = scales::comma) +
xlab("Time") + ylab("Temperature (F)") +
ggtitle("Hour by Hour Temp at JFK: 2013") +
theme(
# Make title front and center
plot.title = element_text(size=14, face="bold",hjust = 0.5),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"),
strip.text.x = element_text(size=10),
axis.text = element_text(size=10),
# axis.text.x = element_blank(),
#panel.border = element_blank(),
panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = "none"
)
nycflights13::weather %>%
# start plotting commands
ggplot(aes(x = time_hour, y = temp)) +
# make it a line plot
geom_line() +
# minimal theme
theme_minimal() +
scale_x_datetime(date_breaks = "6 months", labels = "%m")
nycflights13::weather %>%
# start plotting commands
ggplot(aes(x = time_hour, y = temp)) +
# make it a line plot
geom_line() +
# minimal theme
theme_minimal() +
scale_x_datetime(labels = "%m")
nycflights13::weather %>%
# start plotting commands
ggplot(aes(x = time_hour, y = temp)) +
# make it a line plot
geom_line() +
# minimal theme
theme_minimal()
nycflights13::weather %>%
# start plotting commands
ggplot(aes(x = time_hour, y = temp)) +
# make it a line plot
geom_line() +
# minimal theme
theme_minimal() +
scale_x_datetime(labels = "%m")
nycflights13::weather %>%
# start plotting commands
ggplot(aes(x = time_hour, y = temp)) +
# make it a line plot
geom_line() +
# minimal theme
theme_minimal() +
scale_x_datetime(date_labels = "%Y (%b)")
nycflights13::weather %>%
# start plotting commands
ggplot(aes(x = time_hour, y = temp)) +
# make it a line plot
geom_line() +
# minimal theme
theme_minimal() +
scale_x_datetime(date_labels = "(%b)") +
facet_wrap(~ origin, scales = "free") +
#scale_y_continuous(label = scales::comma) +
xlab("Time") + ylab("Temperature (F)") +
ggtitle("Hour by Hour Temp at JFK: 2013") +
theme(
# Make title front and center
plot.title = element_text(size=14, face="bold",hjust = 0.5),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"),
strip.text.x = element_text(size=10),
axis.text = element_text(size=10),
# axis.text.x = element_blank(),
#panel.border = element_blank(),
panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = "none"
)
nycflights13::weather %>%
filter(origin == "LGA") %>%
mutate(
date = lubridate::as_date(c(paste0(year,"-", month, "-", day)))
) %>%
ggplot(aes(x = temp)) +
geom_density() +
facet_grid(month ~ .)
made_up_data <-
data.frame(
char = c("This is a character", "another", "third", "final"),
dbl = c(4, 5, 10, 234.5),
integer = c(4L, 5L, 10L, 40L),
logical = c(T, F, T, F),
)
made_up_data <-
data.frame(
id = c(1,2,3,4),
id = as.character(id),
char = c("This is a character", "another", "third", "final"),
dbl = c(4, 5, 10, 234.5),
integer = c(4L, 5L, 10L, 40L),
logical = c(T, F, T, F)
)
made_up_data <-
data.frame(
id = c("1","2","3","4"),
char = c("This is a character", "another", "third", "final"),
dbl = c(4, 5, 10, 234.5),
integer = c(4L, 5L, 10L, 40L),
logical = c(T, F, T, F)
)
# see if data is numeric or not.  If not, will need to convert
lapply(X = made_up_data, FUN = class)
# OR
tibble(made_up_data)
nycflights13::flights %>%
dplyr::select(carrier, dep_delay, distance) %>%
left_join(nycflights13::airlines, by = "carrier") %>%
dplyr::select(-carrier) %>%
group_by(name) %>%
skimr::skim() %>%
arrange(name) %>%
# These options just make the data look nice in RMarkdown
kable(caption = "Example for a table with some descriptives") %>%
kable_styling(
bootstrap_options = "striped", # several design options
full_width = FALSE, # defaults to TRUE
position = "center", # where is it positioned?
fixed_thead = TRUE # whether header is fixed when scrolling through -- only for longer tables
) %>%
column_spec(1, bold = TRUE, border_right = TRUE) %>% # column specifications can be easily modified
footnote(general = "You can add some footnotes with certain signs, too.", # this is how you add a footnote
number = c("Footnote 1; ", "Footnote 2; "),
alphabet = c("Footnote A; ", "Footnote B; "),
symbol = c("Footnote Symbol 1; ", "Footnote Symbol 2"),
general_title = "General: ", number_title = "Type I: ",
alphabet_title = "Type II: ", symbol_title = "Type III: ",
footnote_as_chunk = T, title_format = c("italic", "underline")
)
mydata <- read.csv("https://stats.idre.ucla.edu/stat/data/binary.csv")
mylogit <- glm(admit ~ gre + gpa + rank, data = mydata, family = "binomial")
summary(mylogit)
mylogit %>%
broom::tidy()
summary(lm(data = NHIS_mod,formula = hlth ~ uninsured))
# process the data to make sure it's suitable for regression
NHIS_mod <- NHIS %>%
as_tibble() %>%
select(educ, uninsured, age, hlth, sex) %>%
mutate(hlth = as.numeric(hlth),
educ = as.numeric(educ),
uninsured = as.numeric(uninsured),
uninsured = uninsured - 1, #
age = as.numeric(age),
sex = sex - 1) # so 1 is female 0 is male
summary(lm(data = NHIS_mod,formula = hlth ~ uninsured + age))
NHIS %>%
as_tibble() %>%
select(educ, uninsured, age, hlth, sex)
NHIS
summary(lm(data = NHIS_mod,formula = hlth ~ uninsured + age + sex))
NHIS
NHIS <- haven::read_dta("Data/NHIS2009_clean.dta")
class(NHIS)
NHIS %>%
dplyr::select(educ, uninsured, age, hlth, sex)
NHIS %>%
dplyr::select(educ, uninsured, age, hlth, sex) %>%
skim()
mean(NHIS$educ)
NHIS <- haven::read_dta("Data/NHIS2009_clean.dta")
NHIS %>%
dplyr::select(educ, uninsured, age, hlth, sex) %>%
skim()
mean(NHIS$educ)
NHIS_subset <- NHIS %>%
dplyr::select(educ, uninsured, age, hlth, sex)
NHIS_subset %>%
dplyr::select(educ, uninsured, age, hlth, sex) %>%
skim()
NHIS_subset <- NHIS_subset
mutate(
hlth = as.numeric(hlth),
educ = as.numeric(educ),
uninsured = as.numeric(uninsured),
uninsured = uninsured - 1, #
age = as.numeric(age),
sex = sex - 1)
NHIS_subset <- NHIS_subset %>%
mutate(
hlth = as.numeric(hlth),
educ = as.numeric(educ),
uninsured = as.numeric(uninsured),
uninsured = uninsured - 1, #
age = as.numeric(age),
sex = sex - 1)
NHIS_subset
NHIS_subset <- NHIS_subset %>%
mutate(
hlth = as.numeric(hlth),
educ = as.numeric(educ),
uninsured = as.numeric(uninsured),
uninsured = uninsured - 1, #
age = as.numeric(age),
sex = sex - 1)
NHIS_subset %>%
skim()
# create new object so that we don't have to reload the data if we screw up
NHIS_subset <- NHIS %>%
dplyr::select(educ, uninsured, age, hlth, sex)
NHIS_subset %>%
dplyr::select(educ, uninsured, age, hlth, sex) %>%
skim()
unique(NHIS_subset$uninsured)
NHIS_subset %>%
select(educ)
unique(haven$educ)
unique(NHIS_subset$educ)
NHIS_subset %>%
select(educ) %>%
tally()
NHIS_subset %>%
group_by(educ) %>%
tally()
NHIS_subset %>%
group_by(uninsured) %>%
tally()
NHIS_subset %>%
group_by(age) %>%
tally()
NHIS_subset %>%
group_by(sex) %>%
tally()
NHIS_subset$age
unoique(NHIS_subset$age)
unique(NHIS_subset$age)
NHIS_subset %>%
group_by(hlth) %>%
tally()
NHIS_subset %>%
group_by(educ) %>%
tally()
NHIS_subset %>%
group_by(uninsured) %>%
tally()
NHIS_subset %>%
group_by(age) %>%
tally()
NHIS_subset %>%
group_by(sex) %>%
tally()
NHIS_subset %>%
mutate(
educ = as.numeric(educ),
uninsured = uninsured - 1, #
sex = sex - 1) %>%
skim()
NHIS_subset <- NHIS_subset %>%
mutate(
educ = as.numeric(educ),
uninsured = uninsured - 1, #
sex = sex - 1)
NHIS_subset %>% skim()
NHIS_subset
NHIS_subset %>%
group_by(sex) %>%
tally()
NHIS$sex
NHIS$uninsured
NHIS_subset %>%
ggplot( aes(x = uninsured, y = hlth) ) +
geom_point( aes(size = educ) ) +
theme_bw() # nicer looking plots
NHIS_subset %>%
ggplot( aes(x = uninsured, y = hlth) ) +
geom_point() +
theme_bw() # nicer looking plots
lm(data = NHIS_mod,formula = hlth ~ uninsured + age + sex) %>%
tidy(conf.int = TRUE) %>%
filter(term != "(Intercept)") %>%
ggplot( aes(x = term, y = estimate) ) +
# geom_pointrange() is like geom_point + geom_segment
geom_pointrange( aes(ymin = conf.low, ymax = conf.high) ) +
geom_hline(yintercept = 0) + # "horizontal" line at 0
coord_flip() + # flip x and y axes
theme_bw() # nicer looking plots
glance(m1)
m1 <- lm(data = NHIS_mod,formula = hlth ~ uninsured + age + sex)
m1 %>%
tidy(conf.int = TRUE) %>%
filter(term != "(Intercept)") %>%
ggplot( aes(x = term, y = estimate) ) +
# geom_pointrange() is like geom_point + geom_segment
geom_pointrange( aes(ymin = conf.low, ymax = conf.high) ) +
geom_hline(yintercept = 0) + # "horizontal" line at 0
coord_flip() + # flip x and y axes
theme_bw() # nicer looking plots
glance(m1)
rmarkdown::render_site()
